#!/bin/sh

#SBATCH -J wafs_octants
#SBATCH -o /scratch2/NCEPDEV/stmp3/Yali.Mao/gfs_atmos_wafs.o%j
#SBATCH -e /scratch2/NCEPDEV/stmp3/Yali.Mao/gfs_atmos_wafs.o%j
#SBATCH -t 00:30:00
#SBATCH -N 1
#SBATCH -q batch
#SBATCH -A ovp

# 8 means octants

set -xa
date
echo start

# specify computation resource
export threads=1
export MP_LABELIO=yes
export OMP_NUM_THREADS=$threads
export MPIRUN=srun

############################################
# Loading module
############################################
module purge
$MODULESHOME/init/sh

module use /scratch2/NCEPDEV/nwprod/hpc-stack/libs/hpc-stack/modulefiles/stack
module load hpc/1.1.0

# Loading Intel Compiler Suite
module load hpc-intel/18.0.5.274
module load hpc-impi/2018.0.4

module load grib_util/1.2.2 
module load prod_util/1.2.2

module load wgrib2/2.0.8
export WGRIB2=$wgrib2_ROOT/bin/wgrib2

module list

############################################
# required exports!
############################################
### envir: prod/dev/para/bkup/ges/test bkup2/ges2/para2/prod2/prd_p6
export envir=prod

export cyc=${cyc:-00}
# 00 06 12 30 33
export fcsthrs=36

# gfs_atmos_wafs for octants (8 WAFS files)
export job=gfs_atmos_wafs_f${fcsthrs}_${cyc}

############################################
# set NET RUN
############################################
### NET: gfs/para/parallel-test/nam/rap/ dump/ens/nawips/nesdis/
export NET=gfs
export RUN=gfs
export COMPONENT=${COMPONENT:-atmos}

############################################
# Specify versions
############################################
export gfs_ver=v17.0.0

############################################
# user defined
############################################
export pid=${pid:-$$}
export jobid=${job}.${pid}

#export PDY=`$NDATE -24 | cut -c 1-8`
export PDY=`cut -c 7-14 $COMROOT/date/t00z`
export PDY=20210226

USER=`whoami`

############################################
# SENDCOM=YES--Copy output file to /com
# SENDECF=YES--Allow to talk back to ECF
# SENDDBN=YES--Alert output file to TOC
# KEEPDATA=NO--Remove temporary working
############################################
export SENDCOM=YES
export SENDDBN=NO
export SENDDBN_NTC=NO
export KEEPDATA=YES
 
############################################
# Define ROOT directories
############################################
export NWROOT=/scratch2/NCEPDEV/ovp/Yali.Mao/git

export DBNROOT=${UTILROOT}/fakedbn

############################################
# Define DATA, COMOUT and COMIN
############################################
export COMIN=/scratch2/NCEPDEV/stmp3/Yali.Mao/hpc_testdata/com/gfs.$PDY/$cyc/$COMPONENT
export COMOUT=/scratch2/NCEPDEV/stmp3/Yali.Mao/wafs_down/gfs.$PDY/$cyc/$COMPONENT

export DATA=/scratch2/NCEPDEV/stmp3/Yali.Mao/working_wafs/$jobid

export jlogfile=$DATA/jlogfile.${jobid}

################################
# Set up the HOME directory
################################
export HOMEgfs=${HOMEgfs:-${NWROOT}/EMC_wafs}

#############################################
# run the job
#############################################
sh $HOMEgfs/jobs/JGFS_ATMOS_WAFS

date
echo "wafs end"
exit


#############################################
# compare the output (optional)
#############################################

DIFFGB="/gpfs/hps3/emc/global/noscrub/Yali.Mao/git/save/bin/diffgb -x"

stdpcom=/gpfs/gp1/ptmp/Yali.Mao/pcomop
files=`ls $PCOM/` 
for file in $files ; do 
    $DIFFGB $PCOM/$file $stdpcom/$file > $file.diff
done


stdcom=/gpfs/gp2/nco/ops/com/gfs/prod/gfs.$PDY
files=`ls $COMOUT/`
for file in $files ; do
    $DIFFGB $COMOUT/$file $stdcom/$file > $file.diff
done

if [ $USER = 'Yali.Mao' ] ; then
  # the standard data to be compared to
  stdout=/com/${NET}/$envir/${RUN}.${PDY}
  stdout=/gpfs/hps/nco/ops/com/gfs/para/gfs.$PDY
  if [ $envir = prod ]; then
    stdpcom=/pcom/gfs
  else
    stdpcom=/pcom/${envir}/gfs
  fi

  for gid in 37 38 39 40 41 42 43 44 ; do

    # comparing $COMOUT products
    cmp $COMOUT/wafs${NET}${gid}.t${cyc}z.gribf${fcsthrs} $stdout/wafs${NET}${gid}.t${cyc}z.gribf${fcsthrs}
    cmp $COMOUT/wafs${NET}${gid}.t${cyc}z.gribf${fcsthrs}.grib2 $stdout/wafs${NET}${gid}.t${cyc}z.gribf${fcsthrs}.grib2

    # $PCOM data on develop machine may be out of date, so skip the comparison
    continue
    #stdpcom=/ptmpp2/Jiayi.Peng/data

    # comparing $PCOM products
    if [ $fcsthrs -eq 30 ] ; then
      sets=b
      for fhr in 12 18 24 30 ; do
        cmp $PCOM/com.wafs${cyc}${fhr}${sets}.$job $stdpcom/com.wafs${cyc}${fhr}${sets}.$job
	  cmp $PCOM/xtrn.wfs${NET}${cyc}${fhr}${sets}.$job $stdpcom/xtrn.wfs${NET}${cyc}${fhr}${sets}.$job
      done
      sets=
      for fhr in 00 06 ; do
        cmp $PCOM/com.wafs${cyc}${fhr}${sets}.$job $stdpcom/com.wafs${cyc}${fhr}${sets}.$job
	  cmp $PCOM/xtrn.wfs${NET}${cyc}${fhr}${sets}.$job $stdpcom/xtrn.wfs${NET}${cyc}${fhr}${sets}.$job
      done
    fi
    if [ $fcsthrs -ge 12 -a $fcsthrs -le 30 ] ; then
      sets=a
      cmp $PCOM/com.wafs${cyc}${fcsthrs}${sets}.$job $stdpcom/com.wafs${cyc}${fcsthrs}${sets}.$job
      cmp $PCOM/xtrn.wfs${NET}${cyc}${fcsthrs}${sets}.$job $stdpcom/xtrn.wfs${NET}${cyc}${fcsthrs}${sets}.$job
    elif  [ $fcsthrs -ge 36 ] ; then
      sets=
      cmp $PCOM/com.wafs${cyc}${fcsthrs}${sets}.$job $stdpcom/com.wafs${cyc}${fcsthrs}${sets}.$job
      cmp $PCOM/xtrn.wfs${NET}${cyc}${fcsthrs}${sets}.$job $stdpcom/xtrn.wfs${NET}${cyc}${fcsthrs}${sets}.$job
    # elif [ $fcsthrs -le 36 ] ; then 
    #   no comparison
    fi

  done

fi

exit
